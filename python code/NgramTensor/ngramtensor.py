
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
import csv
import collections
import math
import os
import random

import numpy as np
from six.moves import urllib
from six.moves import xrange  # pylint: disable=redefined-builtin
import tensorflow as tf

"""
File reads in txt file generated by ngrams program and convert this into a csv file
This csv file can then be read by tensorlab.

The reason for doing this is that tensorlab has tensor decomposition functions built in, while tensorflow
does not.
"""

data_path = "../../testData/"


def dec(hexVal):
    return int(hexVal, 16)


def test(filename):
    lineNo = 1
    dictionary = dict()
    count = []
    data = []
    '''
    show the occurences of 1-grams in the given file
    '''
    current_ngram = 1
    ngram_one = [[0]*16 for i in range(16)]
    ngram_two = []
    for i in range(16):
        arrayi = []
        for j in range(16):
            arrayj = []
            for k in range(16):
                new_array = [[0]*16 for i in range(16)]
                arrayj.append(new_array)
            arrayi.append(arrayj)
        ngram_two.append(arrayj)

    with open(filename, 'r') as f:
        for line in f:
            if lineNo >= 7:
                if line == "":
                    break
                else:
                    if line.startswith("2-GRAMS"):
                        current_ngram = 2
                    elif line.startswith("3-GRAMS"):
                        print("breaking")
                        break
                    split_line = line.split()

                    if len(split_line) == 2:
                        word = split_line[0]
                        ngram = list(word)
                        frequency = int(split_line[1])
                        if current_ngram == 1:
                            ngram_one[int(ngram[0], 16)][int(ngram[1], 16)] = frequency
                        else:
                            ngram_two[dec(ngram[0])][dec(ngram[1])][dec(ngram[2])][dec(ngram[3])] = frequency

            lineNo += 1
    return ngram_one, ngram_two


def main():
    ngram_one, ngram_two = test(data_path + "Lab1.txt")
    ngram_one = np.asarray(ngram_one)
    np.savetxt(data_path + "ngram_one.csv", ngram_one, delimiter=",")
    with open(data_path + "ngram_two.csv", 'w') as file:
        csv_file = csv.writer(file)
        for i in range(16):
            for j in range(16):
                    csv_file.writerows(ngram_two[i][j])
    print(len(ngram_two[0]))


if __name__ == '__main__':
    main()


